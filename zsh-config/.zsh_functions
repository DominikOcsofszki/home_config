# zsh -c "nvim oneOfTheseDeactivatedFinderForeground.txt"
openV() {
    zsh -c "nvim $1"
}

gitA () {
    git add . && git commit -m "$1" && git push
}

alias web=$HOME/.local/bin/awrit

google () {
    web "http://google.com/search?q=$(echo \"$@\" | sd ' ' '+' | sd '"' '')"
}

deepl () {
    web "https://www.deepl.com/translator#de/en/$(echo \"$@\" | sd ' ' ' ' | sd '"' '')"
    # web "https://www.deepl.com/translator#de/en/$(echo \"$@\" | sd ' ' '+' | sd '"' '')"
}

## Saving files with .my ending => loading all entries of each .my file on the system.
## Using it for important lecture links
export MY=$HOME/.cache/MY/my_cache.mycache
myupdate () {
    echo 'updating /.cache/MY/my_cache.mycache'
    MY=$HOME/.cache/MY/my_cache.mycache
    echo "\$MY: $MY"
    echo "exporting \$MY"
    fd '\.my$' $HOME > $MY
    export MY
    echo "found files:"
    cat $MY
    date +%s > $1
    myopen
}

myopen () {
    cat $MY | xargs cat| fzf | xargs open
}
my () {
    maxDif=$((3*60*60))
    lastupdated=$HOME/.cache/MY/lastupdated.mycache
    last=$(cat $lastupdated)
    todate=$(date +%s)
    dif=$(($todate - $last))
    echo " time since last update: $dif / $maxDif to update now, call: myupdate"
    if [ $dif -ge $maxDif ];
    then
	echo 'updating:'
	myupdate $lastupdated
    else
	myopen
    fi
}

# alias pdfsearch="rg . $PWD  | fzf | gcut -s -f 1 -d $':' | sd ' ' '\\ ' | xargs open"
pdfsearchi () {
rg $1 $PWD  | fzf | gcut -s -f 1 -d $':' | sd ' ' '\\ ' | xargs nvim
}
# alias pdfsearch="rg . $HOME/Uni/univim/downloads/.pdftext/  | fzf | gcut -s -f 1 -d $':' | sd ' ' '\\ ' | xargs open"




## NOT WORKING YET, should open file on proper line
__pdfsearchn () {
rg $1 $PWD --column | fzf | gcut -s -f 1- -d $':' | sd ' ' '\\ ' | xargs pdfopenintonvim {}
}

__pdfopenintonvim () {
   echo \"$@\" 
}

go () {
    open "http://google.com/search?q=$(echo \"$@\" | sd ' ' '+' | sd '"' '')"
}

Alias () {
    alias | fzf | col | gcut -s -f 1 -d '=' | sd ' ' ''

}


linksFrom () {
    cat $1 | grep -o 'href="[^"]*"' | grep -o '"[^"]*"' | grep http | gcut -d '"' -f 2
}

allLinksFrom () {
    for  arg in $* 
    do
        linksFrom $arg
    done

}

openAllEntries () {
    cat $1 | while IFS= read -r filename; do open "$filename"; done
}
